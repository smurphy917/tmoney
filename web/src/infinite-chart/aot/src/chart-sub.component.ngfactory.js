/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('../../src/chart-sub.component');
var import1 = require('@angular/core/src/change_detection/change_detection');
var import2 = require('@angular/core/src/linker/view');
var import3 = require('@angular/core/src/linker/view_utils');
var import5 = require('@angular/core/src/metadata/view');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/linker/component_factory');
var import8 = require('@angular/core/src/linker/query_list');
var import9 = require('@angular/core/src/linker/element_ref');
var Wrapper_InfiniteChartSubComponent = (function () {
    function Wrapper_InfiniteChartSubComponent() {
        this._changed = false;
        this._changes = {};
        this.context = new import0.InfiniteChartSubComponent();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_InfiniteChartSubComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_InfiniteChartSubComponent.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_InfiniteChartSubComponent.prototype.check_p = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.p = currValue;
            this._changes['p'] = new import1.SimpleChange(this._expr_0, currValue);
            this._expr_0 = currValue;
        }
    };
    Wrapper_InfiniteChartSubComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if (changed) {
                this.context.ngOnChanges(this._changes);
                this._changes = {};
            }
        }
        return changed;
    };
    Wrapper_InfiniteChartSubComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_InfiniteChartSubComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_InfiniteChartSubComponent.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.output.subscribe(_eventHandler.bind(view, 'output')));
        }
    };
    return Wrapper_InfiniteChartSubComponent;
}());
exports.Wrapper_InfiniteChartSubComponent = Wrapper_InfiniteChartSubComponent;
var renderType_InfiniteChartSubComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_InfiniteChartSubComponent_Host0 = (function (_super) {
    __extends(View_InfiniteChartSubComponent_Host0, _super);
    function View_InfiniteChartSubComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_InfiniteChartSubComponent_Host0, renderType_InfiniteChartSubComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_InfiniteChartSubComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'g', new import3.InlineArray2(2, 'infinite-sub', ''), rootSelector, null);
        this.compView_0 = new View_InfiniteChartSubComponent0(this.viewUtils, this, 0, this._el_0);
        this._InfiniteChartSubComponent_0_3 = new Wrapper_InfiniteChartSubComponent();
        this.compView_0.create(this._InfiniteChartSubComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._InfiniteChartSubComponent_0_3.context);
    };
    View_InfiniteChartSubComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.InfiniteChartSubComponent) && (0 === requestNodeIndex))) {
            return this._InfiniteChartSubComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_InfiniteChartSubComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._InfiniteChartSubComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_InfiniteChartSubComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._InfiniteChartSubComponent_0_3.ngOnDestroy();
    };
    View_InfiniteChartSubComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_InfiniteChartSubComponent_Host0;
}(import2.AppView));
exports.InfiniteChartSubComponentNgFactory = new import7.ComponentFactory('g[infinite-sub]', View_InfiniteChartSubComponent_Host0, import0.InfiniteChartSubComponent);
var styles_InfiniteChartSubComponent = [];
var renderType_InfiniteChartSubComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_InfiniteChartSubComponent, {});
var View_InfiniteChartSubComponent0 = (function (_super) {
    __extends(View_InfiniteChartSubComponent0, _super);
    function View_InfiniteChartSubComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_InfiniteChartSubComponent0, renderType_InfiniteChartSubComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_InfiniteChartSubComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._viewQuery_path_elem_0 = new import8.QueryList();
        this._text_0 = this.renderer.createText(parentRenderNode, '\n            ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, ':svg:path', import3.EMPTY_INLINE_ARRAY, null);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n            ', null);
        this._el_3 = import3.createRenderElement(this.renderer, parentRenderNode, ':svg:foreignObject', import3.EMPTY_INLINE_ARRAY, null);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._viewQuery_path_elem_0.reset([new import9.ElementRef(this._el_1)]);
        this.context.path = this._viewQuery_path_elem_0.first;
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4
        ]), null);
        return null;
    };
    return View_InfiniteChartSubComponent0;
}(import2.AppView));
exports.View_InfiniteChartSubComponent0 = View_InfiniteChartSubComponent0;
//# sourceMappingURL=chart-sub.component.ngfactory.js.map