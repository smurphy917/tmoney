/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('../../src/chart.component');
var import1 = require('@angular/core/src/change_detection/change_detection');
var import2 = require('@angular/core/src/linker/view');
var import3 = require('@angular/core/src/linker/view_utils');
var import5 = require('@angular/core/src/metadata/view');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/linker/component_factory');
var import8 = require('@angular/core/src/linker/component_factory_resolver');
var import9 = require('./chart-sub.component.ngfactory');
var import10 = require('../../src/chart-sub.component');
var Wrapper_InfiniteChartComponent = (function () {
    function Wrapper_InfiniteChartComponent() {
        this._changed = false;
        this._changes = {};
        this.context = new import0.InfiniteChartComponent();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_InfiniteChartComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_InfiniteChartComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_InfiniteChartComponent.prototype.check_input = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.input = currValue;
            this._changes['input'] = new import1.SimpleChange(this._expr_0, currValue);
            this._expr_0 = currValue;
        }
    };
    Wrapper_InfiniteChartComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if (changed) {
                this.context.ngOnChanges(this._changes);
                this._changes = {};
            }
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_InfiniteChartComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_InfiniteChartComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_InfiniteChartComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_InfiniteChartComponent;
}());
exports.Wrapper_InfiniteChartComponent = Wrapper_InfiniteChartComponent;
var renderType_InfiniteChartComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_InfiniteChartComponent_Host0 = (function (_super) {
    __extends(View_InfiniteChartComponent_Host0, _super);
    function View_InfiniteChartComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_InfiniteChartComponent_Host0, renderType_InfiniteChartComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_InfiniteChartComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'infinite-chart', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_InfiniteChartComponent0(this.viewUtils, this, 0, this._el_0);
        this._ComponentFactoryResolver_0_3 = new import8.CodegenComponentFactoryResolver([import9.InfiniteChartSubComponentNgFactory], this.injectorGet(import8.ComponentFactoryResolver, this.parentIndex));
        this._InfiniteChartComponent_0_4 = new Wrapper_InfiniteChartComponent();
        this.compView_0.create(this._InfiniteChartComponent_0_4.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import7.ComponentRef_(0, this, this._el_0, this._InfiniteChartComponent_0_4.context);
    };
    View_InfiniteChartComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import8.ComponentFactoryResolver) && (0 === requestNodeIndex))) {
            return this._ComponentFactoryResolver_0_3;
        }
        if (((token === import0.InfiniteChartComponent) && (0 === requestNodeIndex))) {
            return this._InfiniteChartComponent_0_4.context;
        }
        return notFoundResult;
    };
    View_InfiniteChartComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._InfiniteChartComponent_0_4.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.detectChanges(throwOnChange);
    };
    View_InfiniteChartComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_InfiniteChartComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_InfiniteChartComponent_Host0;
}(import2.AppView));
exports.InfiniteChartComponentNgFactory = new import7.ComponentFactory('infinite-chart', View_InfiniteChartComponent_Host0, import0.InfiniteChartComponent);
var styles_InfiniteChartComponent = [];
var renderType_InfiniteChartComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_InfiniteChartComponent, {});
var View_InfiniteChartComponent0 = (function (_super) {
    __extends(View_InfiniteChartComponent0, _super);
    function View_InfiniteChartComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_InfiniteChartComponent0, renderType_InfiniteChartComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import1.ChangeDetectorStatus.CheckAlways);
    }
    View_InfiniteChartComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, ':xmlns:xhtml', 'http://www.w3.org/1999/xhtml'), null);
        this._text_2 = this.renderer.createText(this._el_1, '\n        ', null);
        this._el_3 = import3.createRenderElement(this.renderer, this._el_1, ':svg:svg', new import3.InlineArray2(2, ':xmlns:svg', 'http://www.w3.org/2000/svg'), null);
        this._text_4 = this.renderer.createText(this._el_3, '\n            ', null);
        this._text_5 = this.renderer.createText(this._el_3, '\n            ', null);
        this._text_6 = this.renderer.createText(this._el_3, '\n            ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_3, ':svg:g', new import3.InlineArray2(2, 'infinite-sub', ''), null);
        this.compView_7 = new import9.View_InfiniteChartSubComponent0(this.viewUtils, this, 7, this._el_7);
        this._InfiniteChartSubComponent_7_3 = new import9.Wrapper_InfiniteChartSubComponent();
        this.compView_7.create(this._InfiniteChartSubComponent_7_3.context);
        this._text_8 = this.renderer.createText(this._el_3, '\n        ', null);
        this._text_9 = this.renderer.createText(this._el_1, '\n    ', null);
        this._text_10 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._text_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9,
            this._text_10
        ]), null);
        return null;
    };
    View_InfiniteChartComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import10.InfiniteChartSubComponent) && (7 === requestNodeIndex))) {
            return this._InfiniteChartSubComponent_7_3.context;
        }
        return notFoundResult;
    };
    View_InfiniteChartComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this._InfiniteChartSubComponent_7_3.ngDoCheck(this, this._el_7, throwOnChange);
        this.compView_7.detectChanges(throwOnChange);
    };
    View_InfiniteChartComponent0.prototype.destroyInternal = function () {
        this.compView_7.destroy();
        this._InfiniteChartSubComponent_7_3.ngOnDestroy();
    };
    return View_InfiniteChartComponent0;
}(import2.AppView));
exports.View_InfiniteChartComponent0 = View_InfiniteChartComponent0;
//# sourceMappingURL=chart.component.ngfactory.js.map